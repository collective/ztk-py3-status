#!/usr/bin/python3
# -*- coding: utf-8 -*-
import json


PACKAGES = [
  'Products.CMFPlone',
  'plone.reload',
  'Plone',
  'plone.recipe.zope2instance',
  'plone.app.upgrade',
  'plone.app.iterate',
  'plone.app.dexterity',
  'plone.app.caching',
  'plonetheme.barceloneta',
  'plone.theme',
  'plone.session',
  'plone.schema',
  'plone.registry',
  'plone.protect',
  'plone.portlets',
  'plone.portlet.static',
  'plone.portlet.collection',
  'plone.outputfilters',
  'plone.memoize',
  'plone.locking',
  'plone.intelligenttext',
  'plone.indexer',
  'plone.i18n',
  'plone.contentrules',
  'plone.browserlayer',
  'plone.batching',
  'plone.app.workflow',
  'plone.app.vocabularies',
  'plone.app.viewletmanager',
  'plone.app.uuid',
  'plone.app.users',
  'plone.app.theming',
  'plone.app.registry',
  'plone.app.redirector',
  'plone.app.portlets',
  'plone.app.linkintegrity',
  'plone.app.layout',
  'plone.app.multilingual',
  'plone.app.i18n',
  'plone.app.folder',
  'plone.app.discussion',
  'plone.app.customerize',
  'plone.app.controlpanel',
  'plone.app.contenttypes',
  'plone.app.contentrules',
  'plone.app.contentmenu',
  'plone.app.contentlisting',
  'plone.app.content',
  'plone.api',
  'plone.z3cform',
  'plone.supermodel',
  'plone.autoform',
  'plone.app.z3cform',
  'plone.schemaeditor',
  'plone.rfc822',
  'plone.namedfile',
  'plone.formwidget.namedfile',
  'plone.dexterity',
  'plone.behavior',
  'plone.app.textfield',
  'plone.cachepurging',
  'plone.caching',
  'plone.app.widgets',
  'plone.app.collection',
  'plone.app.blob',
  'plone.uuid',
  'plone.folder',
  'plone.keyring',
  'plone.transformchain',
  'plone.app.imaging',
  'plone.app.querystring',
  'plone.subrequest',
  'plone.resourceeditor',
  'plone.resource',
  'plone.app.relationfield',
  'plone.app.intid',
  'plone.app.lockingbehavior',
  'plone.app.versioningbehavior',
  'plone.app.event',
  'plone.stringinterp',
  'plone.scale',
  'plone.synchronize',
  'plone.alterego',
  'plone.formwidget.recurrence',
  'plone.event',


  'ZODB3',
  'Zope',
  'zope.testing',
  'zope.site',
  'zope.publisher',
  'zope.processlifetime',
  'zope.interface',
  'zope.component',
  'zope.traversing',
  'zope.tales',
  'zope.tal',
  'zope.structuredtext',
  'zope.pagetemplate',
  'zope.location',
  'zope.i18nmessageid',
  'zope.i18n',
  'zope.event',
  'zope.dottedname',
  'zope.deprecation',
  'zope.deferredimport',
  'zope.container',
  'zope.cachedescriptors',
  'zope.app.locales',
  'zope.viewlet',
  'zope.testbrowser',
  'zope.size',
  'zope.sequencesort',
  'zope.sendmail',
  'zope.security',
  'zope.schema',
  'zope.ptresource',
  'zope.proxy',
  'zope.lifecycleevent',
  'zope.exceptions',
  'zope.contenttype',
  'zope.contentprovider',
  'zope.configuration',
  'zope.browserresource',
  'zope.browserpage',
  'zope.browsermenu',
  'zope.browser',
  'ZopeUndo',
  'zope.ramcache',
  'zope.annotation',
  'zope.datetime',
  'zope.broken',
  'zope.filerepresentation',
  'zope.componentvocabulary',
  'zope.formlib',
  'zope.globalrequest',
  'zope.copy',
  'zope.app.publication',
  'zope.intid',
  'zope.error',
  'zope.authentication',
  'zope.keyreference',


  'Products.ZopeVersionControl',
  'Products.CMFPlacefulWorkflow',
  'Products.ATContentTypes',
  'Products.Archetypes',
  'Products.statusmessages',
  'Products.contentmigration',
  'Products.ResourceRegistries',
  'Products.PortalTransforms',
  'Products.PluginRegistry',
  'Products.PluggableAuthService',
  'Products.PlonePAS',
  'Products.PlacelessTranslationService',
  'Products.PasswordResetTool',
  'Products.MimetypesRegistry',
  'Products.GenericSetup',
  'Products.ExternalEditor',
  'Products.ExtendedPathIndex',
  'Products.DCWorkflow',
  'Products.CMFUid',
  'Products.CMFQuickInstallerTool',
  'Products.CMFEditions',
  'Products.CMFDynamicViewFTI',
  'Products.CMFDiffTool',
  'Products.CMFCore',
  'Products.StandardCacheManagers',
  'Products.PythonScripts',
  'Products.MIMETools',
  'Products.MailHost',
  'Products.ExternalMethod',
  'Products.BTreeFolder2',
  'Products.ZCTextIndex',
  'Products.ZCatalog',
  'Products.OFSP',
  'Products.CMFFormController',
  'Products.validation',
  'Products.ZSQLMethods',


  'ExtensionClass',
  'DateTime',
  'Acquisition',
  'zdaemon',
  'ZConfig',
  'zc.lockfile',
  'zLOG',
  'zExceptions',
  'RestrictedPython',
  'Record',
  'Persistence',
  'MultiMapping',
  'Missing',
  'DocumentTemplate',
  'AccessControl',
  'z3c.form',
  'z3c.zcmlhook',
  'collective.monkeypatcher',
  'five.globalrequest',
  'z3c.relationfield',
  'archetypes.multilingual',
  'z3c.pt',
  'sourcecodegen',
  'five.intid',
  'zc.relation',
  'z3c.objpath',
  'zc.recipe.egg',
  'z3c.autoinclude',
  'mockup',
  'five.pt',
  'five.localsitemanager',
  'five.customerize',
  'borg.localrole',
  'diazo',
  'Chameleon',
  'mechanize',
  'z3c.formwidget.query',
  'z3c.caching',
  'archetypes.schemaextender',
  'transaction',
  'repoze.xmliter',


  'Pillow',
  'tempstorage',
  'pytz',
  'initgroups',
  'docutils',
  'lxml',
  'python_dateutil',
  'ply',
  'Unidecode',
  'six',
  'roman',
  'feedparser',
  'decorator',
  'Markdown',
  'python_gettext',
  'future',
  'cssselect',
  'mailinglogger',
  'setuptools',
  'zc.buildout',
  'slimit',
  'cssmin',
]
COLLECTIVE_PACKAGES = [
  'plone.app.locales',
  'Products.SecureMailHost',
  'Products.DateRecurringIndex',
  'icalendar',
  'collective.elephantvocabulary',
]
LOWERCASE_PACKAGES = [x.lower() for x in PACKAGES]
FINAL_PACKAGES = []
MISSING_PACKAGES = [
  'zope.broken',
  'z3c.zcmlhook',
  'sourcecodegen',
  'z3c.objpath',
  'zc.recipe.egg',
  'mockup',
  'Chameleon',
  'mechanize',
  'z3c.caching',
  'repoze.xmliter',
  'Pillow',
  'pytz',
  'docutils',
  'lxml',
  'python_dateutil',
  'ply',
  'Unidecode',
  'six',
  'feedparser',
  'decorator',
  'Markdown',
  'python_gettext',
  'future',
  'cssselect',
  'mailinglogger',
  'setuptools',
  'zc.buildout',
  'slimit',
  'cssmin',
]


plone_packages = json.load(open('plone_packages.json'))
zope_packages = json.load(open('zope_packages.json'))

for pkg in plone_packages + zope_packages:
    if pkg['name'].lower() in LOWERCASE_PACKAGES:
        FINAL_PACKAGES.append(pkg)

for pkg in MISSING_PACKAGES:
    FINAL_PACKAGES.append(
        {
            'name': pkg,
            'source_web_url': 'https://pypi.python.org/pypi/{0}'.format(pkg),
        }
    )

for pkg in COLLECTIVE_PACKAGES:
    FINAL_PACKAGES.append(
        {
            'name': pkg,
            'source_web_url': 'https://pypi.python.org/pypi/{0}'.format(pkg),
            'github_web_url': 'https://github.com/collective/{0}'.format(pkg),
        }
    )

with open('packages.json', 'w') as packages_file:
    json.dump(
        FINAL_PACKAGES,
        packages_file,
        sort_keys=True,
        indent=4,
        separators=(',', ': ')
    )
